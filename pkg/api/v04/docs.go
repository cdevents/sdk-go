// Code generated by tools/generator. DO NOT EDIT.

/*
Copyright 2024 The CDEvents Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
*/

// Package v03 contains method to create events that belong to the
// CDEvents specification v0.4.x

package v04

import "github.com/cdevents/sdk-go/pkg/api"

var SpecVersion = "0.4.1"

type ArtifactDeletedEvent = api.ArtifactDeletedEventV0_1_0
type ArtifactDeletedSubject = api.ArtifactDeletedSubjectV0_1_0

func NewArtifactDeletedEvent() (*ArtifactDeletedEvent, error) {
	return api.NewArtifactDeletedEventV0_1_0(SpecVersion)
}

var ArtifactDeletedEventType = api.ArtifactDeletedEventTypeV0_1_0

type ArtifactDownloadedEvent = api.ArtifactDownloadedEventV0_1_0
type ArtifactDownloadedSubject = api.ArtifactDownloadedSubjectV0_1_0

func NewArtifactDownloadedEvent() (*ArtifactDownloadedEvent, error) {
	return api.NewArtifactDownloadedEventV0_1_0(SpecVersion)
}

var ArtifactDownloadedEventType = api.ArtifactDownloadedEventTypeV0_1_0

type ArtifactPackagedEvent = api.ArtifactPackagedEventV0_2_0
type ArtifactPackagedSubject = api.ArtifactPackagedSubjectV0_2_0

// ArtifactArtifactSubjectContentSbomV0_2_0 holds the content of a Sbom field in the content
type ArtifactPackagedSubjectContentSbom = api.ArtifactPackagedSubjectContentSbomV0_2_0

func NewArtifactPackagedEvent() (*ArtifactPackagedEvent, error) {
	return api.NewArtifactPackagedEventV0_2_0(SpecVersion)
}

var ArtifactPackagedEventType = api.ArtifactPackagedEventTypeV0_2_0

type ArtifactPublishedEvent = api.ArtifactPublishedEventV0_2_0
type ArtifactPublishedSubject = api.ArtifactPublishedSubjectV0_2_0

// ArtifactArtifactSubjectContentSbomV0_2_0 holds the content of a Sbom field in the content
type ArtifactPublishedSubjectContentSbom = api.ArtifactPublishedSubjectContentSbomV0_2_0

func NewArtifactPublishedEvent() (*ArtifactPublishedEvent, error) {
	return api.NewArtifactPublishedEventV0_2_0(SpecVersion)
}

var ArtifactPublishedEventType = api.ArtifactPublishedEventTypeV0_2_0

type ArtifactSignedEvent = api.ArtifactSignedEventV0_2_0
type ArtifactSignedSubject = api.ArtifactSignedSubjectV0_2_0

func NewArtifactSignedEvent() (*ArtifactSignedEvent, error) {
	return api.NewArtifactSignedEventV0_2_0(SpecVersion)
}

var ArtifactSignedEventType = api.ArtifactSignedEventTypeV0_2_0

type BranchCreatedEvent = api.BranchCreatedEventV0_2_0
type BranchCreatedSubject = api.BranchCreatedSubjectV0_2_0

func NewBranchCreatedEvent() (*BranchCreatedEvent, error) {
	return api.NewBranchCreatedEventV0_2_0(SpecVersion)
}

var BranchCreatedEventType = api.BranchCreatedEventTypeV0_2_0

type BranchDeletedEvent = api.BranchDeletedEventV0_2_0
type BranchDeletedSubject = api.BranchDeletedSubjectV0_2_0

func NewBranchDeletedEvent() (*BranchDeletedEvent, error) {
	return api.NewBranchDeletedEventV0_2_0(SpecVersion)
}

var BranchDeletedEventType = api.BranchDeletedEventTypeV0_2_0

type BuildFinishedEvent = api.BuildFinishedEventV0_2_0
type BuildFinishedSubject = api.BuildFinishedSubjectV0_2_0

func NewBuildFinishedEvent() (*BuildFinishedEvent, error) {
	return api.NewBuildFinishedEventV0_2_0(SpecVersion)
}

var BuildFinishedEventType = api.BuildFinishedEventTypeV0_2_0

type BuildQueuedEvent = api.BuildQueuedEventV0_2_0
type BuildQueuedSubject = api.BuildQueuedSubjectV0_2_0

func NewBuildQueuedEvent() (*BuildQueuedEvent, error) {
	return api.NewBuildQueuedEventV0_2_0(SpecVersion)
}

var BuildQueuedEventType = api.BuildQueuedEventTypeV0_2_0

type BuildStartedEvent = api.BuildStartedEventV0_2_0
type BuildStartedSubject = api.BuildStartedSubjectV0_2_0

func NewBuildStartedEvent() (*BuildStartedEvent, error) {
	return api.NewBuildStartedEventV0_2_0(SpecVersion)
}

var BuildStartedEventType = api.BuildStartedEventTypeV0_2_0

type ChangeAbandonedEvent = api.ChangeAbandonedEventV0_2_0
type ChangeAbandonedSubject = api.ChangeAbandonedSubjectV0_2_0

func NewChangeAbandonedEvent() (*ChangeAbandonedEvent, error) {
	return api.NewChangeAbandonedEventV0_2_0(SpecVersion)
}

var ChangeAbandonedEventType = api.ChangeAbandonedEventTypeV0_2_0

type ChangeCreatedEvent = api.ChangeCreatedEventV0_3_0
type ChangeCreatedSubject = api.ChangeCreatedSubjectV0_3_0

func NewChangeCreatedEvent() (*ChangeCreatedEvent, error) {
	return api.NewChangeCreatedEventV0_3_0(SpecVersion)
}

var ChangeCreatedEventType = api.ChangeCreatedEventTypeV0_3_0

type ChangeMergedEvent = api.ChangeMergedEventV0_2_0
type ChangeMergedSubject = api.ChangeMergedSubjectV0_2_0

func NewChangeMergedEvent() (*ChangeMergedEvent, error) {
	return api.NewChangeMergedEventV0_2_0(SpecVersion)
}

var ChangeMergedEventType = api.ChangeMergedEventTypeV0_2_0

type ChangeReviewedEvent = api.ChangeReviewedEventV0_2_0
type ChangeReviewedSubject = api.ChangeReviewedSubjectV0_2_0

func NewChangeReviewedEvent() (*ChangeReviewedEvent, error) {
	return api.NewChangeReviewedEventV0_2_0(SpecVersion)
}

var ChangeReviewedEventType = api.ChangeReviewedEventTypeV0_2_0

type ChangeUpdatedEvent = api.ChangeUpdatedEventV0_2_0
type ChangeUpdatedSubject = api.ChangeUpdatedSubjectV0_2_0

func NewChangeUpdatedEvent() (*ChangeUpdatedEvent, error) {
	return api.NewChangeUpdatedEventV0_2_0(SpecVersion)
}

var ChangeUpdatedEventType = api.ChangeUpdatedEventTypeV0_2_0

type EnvironmentCreatedEvent = api.EnvironmentCreatedEventV0_2_0
type EnvironmentCreatedSubject = api.EnvironmentCreatedSubjectV0_2_0

func NewEnvironmentCreatedEvent() (*EnvironmentCreatedEvent, error) {
	return api.NewEnvironmentCreatedEventV0_2_0(SpecVersion)
}

var EnvironmentCreatedEventType = api.EnvironmentCreatedEventTypeV0_2_0

type EnvironmentDeletedEvent = api.EnvironmentDeletedEventV0_2_0
type EnvironmentDeletedSubject = api.EnvironmentDeletedSubjectV0_2_0

func NewEnvironmentDeletedEvent() (*EnvironmentDeletedEvent, error) {
	return api.NewEnvironmentDeletedEventV0_2_0(SpecVersion)
}

var EnvironmentDeletedEventType = api.EnvironmentDeletedEventTypeV0_2_0

type EnvironmentModifiedEvent = api.EnvironmentModifiedEventV0_2_0
type EnvironmentModifiedSubject = api.EnvironmentModifiedSubjectV0_2_0

func NewEnvironmentModifiedEvent() (*EnvironmentModifiedEvent, error) {
	return api.NewEnvironmentModifiedEventV0_2_0(SpecVersion)
}

var EnvironmentModifiedEventType = api.EnvironmentModifiedEventTypeV0_2_0

type IncidentDetectedEvent = api.IncidentDetectedEventV0_2_0
type IncidentDetectedSubject = api.IncidentDetectedSubjectV0_2_0

func NewIncidentDetectedEvent() (*IncidentDetectedEvent, error) {
	return api.NewIncidentDetectedEventV0_2_0(SpecVersion)
}

var IncidentDetectedEventType = api.IncidentDetectedEventTypeV0_2_0

type IncidentReportedEvent = api.IncidentReportedEventV0_2_0
type IncidentReportedSubject = api.IncidentReportedSubjectV0_2_0

func NewIncidentReportedEvent() (*IncidentReportedEvent, error) {
	return api.NewIncidentReportedEventV0_2_0(SpecVersion)
}

var IncidentReportedEventType = api.IncidentReportedEventTypeV0_2_0

type IncidentResolvedEvent = api.IncidentResolvedEventV0_2_0
type IncidentResolvedSubject = api.IncidentResolvedSubjectV0_2_0

func NewIncidentResolvedEvent() (*IncidentResolvedEvent, error) {
	return api.NewIncidentResolvedEventV0_2_0(SpecVersion)
}

var IncidentResolvedEventType = api.IncidentResolvedEventTypeV0_2_0

type PipelineRunFinishedEvent = api.PipelineRunFinishedEventV0_2_0
type PipelineRunFinishedSubject = api.PipelineRunFinishedSubjectV0_2_0

func NewPipelineRunFinishedEvent() (*PipelineRunFinishedEvent, error) {
	return api.NewPipelineRunFinishedEventV0_2_0(SpecVersion)
}

var PipelineRunFinishedEventType = api.PipelineRunFinishedEventTypeV0_2_0

type PipelineRunQueuedEvent = api.PipelineRunQueuedEventV0_2_0
type PipelineRunQueuedSubject = api.PipelineRunQueuedSubjectV0_2_0

func NewPipelineRunQueuedEvent() (*PipelineRunQueuedEvent, error) {
	return api.NewPipelineRunQueuedEventV0_2_0(SpecVersion)
}

var PipelineRunQueuedEventType = api.PipelineRunQueuedEventTypeV0_2_0

type PipelineRunStartedEvent = api.PipelineRunStartedEventV0_2_0
type PipelineRunStartedSubject = api.PipelineRunStartedSubjectV0_2_0

func NewPipelineRunStartedEvent() (*PipelineRunStartedEvent, error) {
	return api.NewPipelineRunStartedEventV0_2_0(SpecVersion)
}

var PipelineRunStartedEventType = api.PipelineRunStartedEventTypeV0_2_0

type RepositoryCreatedEvent = api.RepositoryCreatedEventV0_2_0
type RepositoryCreatedSubject = api.RepositoryCreatedSubjectV0_2_0

func NewRepositoryCreatedEvent() (*RepositoryCreatedEvent, error) {
	return api.NewRepositoryCreatedEventV0_2_0(SpecVersion)
}

var RepositoryCreatedEventType = api.RepositoryCreatedEventTypeV0_2_0

type RepositoryDeletedEvent = api.RepositoryDeletedEventV0_2_0
type RepositoryDeletedSubject = api.RepositoryDeletedSubjectV0_2_0

func NewRepositoryDeletedEvent() (*RepositoryDeletedEvent, error) {
	return api.NewRepositoryDeletedEventV0_2_0(SpecVersion)
}

var RepositoryDeletedEventType = api.RepositoryDeletedEventTypeV0_2_0

type RepositoryModifiedEvent = api.RepositoryModifiedEventV0_2_0
type RepositoryModifiedSubject = api.RepositoryModifiedSubjectV0_2_0

func NewRepositoryModifiedEvent() (*RepositoryModifiedEvent, error) {
	return api.NewRepositoryModifiedEventV0_2_0(SpecVersion)
}

var RepositoryModifiedEventType = api.RepositoryModifiedEventTypeV0_2_0

type ServiceDeployedEvent = api.ServiceDeployedEventV0_2_0
type ServiceDeployedSubject = api.ServiceDeployedSubjectV0_2_0

func NewServiceDeployedEvent() (*ServiceDeployedEvent, error) {
	return api.NewServiceDeployedEventV0_2_0(SpecVersion)
}

var ServiceDeployedEventType = api.ServiceDeployedEventTypeV0_2_0

type ServicePublishedEvent = api.ServicePublishedEventV0_2_0
type ServicePublishedSubject = api.ServicePublishedSubjectV0_2_0

func NewServicePublishedEvent() (*ServicePublishedEvent, error) {
	return api.NewServicePublishedEventV0_2_0(SpecVersion)
}

var ServicePublishedEventType = api.ServicePublishedEventTypeV0_2_0

type ServiceRemovedEvent = api.ServiceRemovedEventV0_2_0
type ServiceRemovedSubject = api.ServiceRemovedSubjectV0_2_0

func NewServiceRemovedEvent() (*ServiceRemovedEvent, error) {
	return api.NewServiceRemovedEventV0_2_0(SpecVersion)
}

var ServiceRemovedEventType = api.ServiceRemovedEventTypeV0_2_0

type ServiceRolledbackEvent = api.ServiceRolledbackEventV0_2_0
type ServiceRolledbackSubject = api.ServiceRolledbackSubjectV0_2_0

func NewServiceRolledbackEvent() (*ServiceRolledbackEvent, error) {
	return api.NewServiceRolledbackEventV0_2_0(SpecVersion)
}

var ServiceRolledbackEventType = api.ServiceRolledbackEventTypeV0_2_0

type ServiceUpgradedEvent = api.ServiceUpgradedEventV0_2_0
type ServiceUpgradedSubject = api.ServiceUpgradedSubjectV0_2_0

func NewServiceUpgradedEvent() (*ServiceUpgradedEvent, error) {
	return api.NewServiceUpgradedEventV0_2_0(SpecVersion)
}

var ServiceUpgradedEventType = api.ServiceUpgradedEventTypeV0_2_0

type TaskRunFinishedEvent = api.TaskRunFinishedEventV0_2_0
type TaskRunFinishedSubject = api.TaskRunFinishedSubjectV0_2_0

func NewTaskRunFinishedEvent() (*TaskRunFinishedEvent, error) {
	return api.NewTaskRunFinishedEventV0_2_0(SpecVersion)
}

var TaskRunFinishedEventType = api.TaskRunFinishedEventTypeV0_2_0

type TaskRunStartedEvent = api.TaskRunStartedEventV0_2_0
type TaskRunStartedSubject = api.TaskRunStartedSubjectV0_2_0

func NewTaskRunStartedEvent() (*TaskRunStartedEvent, error) {
	return api.NewTaskRunStartedEventV0_2_0(SpecVersion)
}

var TaskRunStartedEventType = api.TaskRunStartedEventTypeV0_2_0

type TestCaseRunFinishedEvent = api.TestCaseRunFinishedEventV0_2_0
type TestCaseRunFinishedSubject = api.TestCaseRunFinishedSubjectV0_2_0

// TestCaseRunTestCaseRunSubjectContentTestCaseV0_2_0 holds the content of a TestCase field in the content
type TestCaseRunFinishedSubjectContentTestCase = api.TestCaseRunFinishedSubjectContentTestCaseV0_2_0

func NewTestCaseRunFinishedEvent() (*TestCaseRunFinishedEvent, error) {
	return api.NewTestCaseRunFinishedEventV0_2_0(SpecVersion)
}

var TestCaseRunFinishedEventType = api.TestCaseRunFinishedEventTypeV0_2_0

type TestCaseRunQueuedEvent = api.TestCaseRunQueuedEventV0_2_0
type TestCaseRunQueuedSubject = api.TestCaseRunQueuedSubjectV0_2_0

// TestCaseRunTestCaseRunSubjectContentTestCaseV0_2_0 holds the content of a TestCase field in the content
type TestCaseRunQueuedSubjectContentTestCase = api.TestCaseRunQueuedSubjectContentTestCaseV0_2_0

// TestCaseRunTestCaseRunSubjectContentTriggerV0_2_0 holds the content of a Trigger field in the content
type TestCaseRunQueuedSubjectContentTrigger = api.TestCaseRunQueuedSubjectContentTriggerV0_2_0

func NewTestCaseRunQueuedEvent() (*TestCaseRunQueuedEvent, error) {
	return api.NewTestCaseRunQueuedEventV0_2_0(SpecVersion)
}

var TestCaseRunQueuedEventType = api.TestCaseRunQueuedEventTypeV0_2_0

type TestCaseRunSkippedEvent = api.TestCaseRunSkippedEventV0_1_0
type TestCaseRunSkippedSubject = api.TestCaseRunSkippedSubjectV0_1_0

// TestCaseRunTestCaseRunSubjectContentTestCaseV0_1_0 holds the content of a TestCase field in the content
type TestCaseRunSkippedSubjectContentTestCase = api.TestCaseRunSkippedSubjectContentTestCaseV0_1_0

func NewTestCaseRunSkippedEvent() (*TestCaseRunSkippedEvent, error) {
	return api.NewTestCaseRunSkippedEventV0_1_0(SpecVersion)
}

var TestCaseRunSkippedEventType = api.TestCaseRunSkippedEventTypeV0_1_0

type TestCaseRunStartedEvent = api.TestCaseRunStartedEventV0_2_0
type TestCaseRunStartedSubject = api.TestCaseRunStartedSubjectV0_2_0

// TestCaseRunTestCaseRunSubjectContentTestCaseV0_2_0 holds the content of a TestCase field in the content
type TestCaseRunStartedSubjectContentTestCase = api.TestCaseRunStartedSubjectContentTestCaseV0_2_0

// TestCaseRunTestCaseRunSubjectContentTriggerV0_2_0 holds the content of a Trigger field in the content
type TestCaseRunStartedSubjectContentTrigger = api.TestCaseRunStartedSubjectContentTriggerV0_2_0

func NewTestCaseRunStartedEvent() (*TestCaseRunStartedEvent, error) {
	return api.NewTestCaseRunStartedEventV0_2_0(SpecVersion)
}

var TestCaseRunStartedEventType = api.TestCaseRunStartedEventTypeV0_2_0

type TestOutputPublishedEvent = api.TestOutputPublishedEventV0_2_0
type TestOutputPublishedSubject = api.TestOutputPublishedSubjectV0_2_0

func NewTestOutputPublishedEvent() (*TestOutputPublishedEvent, error) {
	return api.NewTestOutputPublishedEventV0_2_0(SpecVersion)
}

var TestOutputPublishedEventType = api.TestOutputPublishedEventTypeV0_2_0

type TestSuiteRunFinishedEvent = api.TestSuiteRunFinishedEventV0_2_0
type TestSuiteRunFinishedSubject = api.TestSuiteRunFinishedSubjectV0_2_0

// TestSuiteRunTestSuiteRunSubjectContentTestSuiteV0_2_0 holds the content of a TestSuite field in the content
type TestSuiteRunFinishedSubjectContentTestSuite = api.TestSuiteRunFinishedSubjectContentTestSuiteV0_2_0

func NewTestSuiteRunFinishedEvent() (*TestSuiteRunFinishedEvent, error) {
	return api.NewTestSuiteRunFinishedEventV0_2_0(SpecVersion)
}

var TestSuiteRunFinishedEventType = api.TestSuiteRunFinishedEventTypeV0_2_0

type TestSuiteRunQueuedEvent = api.TestSuiteRunQueuedEventV0_2_0
type TestSuiteRunQueuedSubject = api.TestSuiteRunQueuedSubjectV0_2_0

// TestSuiteRunTestSuiteRunSubjectContentTestSuiteV0_2_0 holds the content of a TestSuite field in the content
type TestSuiteRunQueuedSubjectContentTestSuite = api.TestSuiteRunQueuedSubjectContentTestSuiteV0_2_0

// TestSuiteRunTestSuiteRunSubjectContentTriggerV0_2_0 holds the content of a Trigger field in the content
type TestSuiteRunQueuedSubjectContentTrigger = api.TestSuiteRunQueuedSubjectContentTriggerV0_2_0

func NewTestSuiteRunQueuedEvent() (*TestSuiteRunQueuedEvent, error) {
	return api.NewTestSuiteRunQueuedEventV0_2_0(SpecVersion)
}

var TestSuiteRunQueuedEventType = api.TestSuiteRunQueuedEventTypeV0_2_0

type TestSuiteRunStartedEvent = api.TestSuiteRunStartedEventV0_2_0
type TestSuiteRunStartedSubject = api.TestSuiteRunStartedSubjectV0_2_0

// TestSuiteRunTestSuiteRunSubjectContentTestSuiteV0_2_0 holds the content of a TestSuite field in the content
type TestSuiteRunStartedSubjectContentTestSuite = api.TestSuiteRunStartedSubjectContentTestSuiteV0_2_0

// TestSuiteRunTestSuiteRunSubjectContentTriggerV0_2_0 holds the content of a Trigger field in the content
type TestSuiteRunStartedSubjectContentTrigger = api.TestSuiteRunStartedSubjectContentTriggerV0_2_0

func NewTestSuiteRunStartedEvent() (*TestSuiteRunStartedEvent, error) {
	return api.NewTestSuiteRunStartedEventV0_2_0(SpecVersion)
}

var TestSuiteRunStartedEventType = api.TestSuiteRunStartedEventTypeV0_2_0

type TicketClosedEvent = api.TicketClosedEventV0_1_0
type TicketClosedSubject = api.TicketClosedSubjectV0_1_0

func NewTicketClosedEvent() (*TicketClosedEvent, error) {
	return api.NewTicketClosedEventV0_1_0(SpecVersion)
}

var TicketClosedEventType = api.TicketClosedEventTypeV0_1_0

type TicketCreatedEvent = api.TicketCreatedEventV0_1_0
type TicketCreatedSubject = api.TicketCreatedSubjectV0_1_0

func NewTicketCreatedEvent() (*TicketCreatedEvent, error) {
	return api.NewTicketCreatedEventV0_1_0(SpecVersion)
}

var TicketCreatedEventType = api.TicketCreatedEventTypeV0_1_0

type TicketUpdatedEvent = api.TicketUpdatedEventV0_1_0
type TicketUpdatedSubject = api.TicketUpdatedSubjectV0_1_0

func NewTicketUpdatedEvent() (*TicketUpdatedEvent, error) {
	return api.NewTicketUpdatedEventV0_1_0(SpecVersion)
}

var TicketUpdatedEventType = api.TicketUpdatedEventTypeV0_1_0

type CustomTypeEvent = api.CustomTypeEventV0_4_1
type CustomTypeSubject = api.CustomTypeSubjectV0_4_1

func NewCustomTypeEvent() (*CustomTypeEvent, error) {
	return api.NewCustomTypeEventV0_4_1(SpecVersion)
}

var CustomTypeEventType = api.CustomTypeEventTypeV0_4_1

// NewFromJsonBytes builds a new CDEventReader from a JSON string as []bytes
// This works by unmarshalling the context first, extracting the event type and using
// that to unmarshal the rest of the event into the correct object.
// It assumes the context can be unmarshalled in a `Context` object.
func NewFromJSONBytes(event []byte) (api.CDEventV04, error) {
	return api.NewFromJSONBytesContext[api.CDEventV04](event, CDEventsByUnversionedTypes)
}

// Build a new CDEventReader from a JSON string
func NewFromJsonString(event string) (api.CDEventV04, error) {
	return NewFromJSONBytes([]byte(event))
}
